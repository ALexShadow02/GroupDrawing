<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Drawing studio</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-wEmeIV1mKuiNpC+IOBjI7aAzPcEZeedi5yW5f2yOq55WWLwNGmvvx4Um1vskeMj0" crossorigin="anonymous">
    <link rel = "stylesheet" href = "../styles/genStyles.css">
    <link rel = "stylesheet" href = "../styles/studio.css">
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-light" style="background-color: #adff2f">
        <a class="navbar-brand" href="">
            <img src = "../assets/Logo.jpg" alt = "Logo" id = "logo">
        </a>
        <div class="container-fluid">
            <button
            class="navbar-toggler"
            type="button"
            data-mdb-toggle="collapse"
            data-mdb-target="#navbarSupportedContent"
            aria-controls="navbarSupportedContent"
            aria-expanded="false"
            aria-label="Toggle navigation"
            >
                <i class="fas fa-bars"></i>
            </button>
            <div class="collapse navbar-collapse" id="navbarSupportedContent">
                <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                    <li class="nav-item">
                        <a class="nav-link" href="/d">Drawings</a>
                    </li>
                </ul>
            </div>
            <div class="d-flex align-items-center">
                <button type="button" id="accset_btn" class="btn btn-secondary me-3 nav-btn">
                    Access settings
                </button>
                <div class="dropdown">
                    <button class="btn btn-secondary dropdown-toggle nav-btn" type="button" id="profile_btn" data-bs-toggle="dropdown" aria-expanded="false">
                        Profile
                    </button>
                    <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="dropdownMenuButton1">
                        <li><a class="dropdown-item" href="">{{userName}}</a></li>
                        <li><a class="dropdown-item" href="">{{email}}</a></li>
                        <li><a class="dropdown-item" href="/set">Settings</a></li>
                        <li><a class="dropdown-item" href="/logout">Logout</a></li>
                    </ul>
                </div>
            </div>
        </div>
    </nav>
    <div id = "room_name">{{name}}</div>
    <div class="bg"></div>
    <div class="bg bg2"></div>
    <div class="bg bg3"></div>
    <div id="toolbar">
        <div class = "tool" id = "move" title = "Move">
            <img src="../assets/toolbar/pointer-on.svg" draggable = "false">
        </div>
        <div class = "tool" id = "pencil" title = "Pencil"> 
            <img src="../assets/toolbar/pencil.svg" draggable = "false">
        </div>
        <div class = "tool" id = "rect" title = "Rectangle">
            <img src="../assets/toolbar/rectangle.svg" draggable = "false">
        </div>
        <div class = "tool" id = "triangle" title = "Triangle">
            <img src="../assets/toolbar/triangle.svg" draggable = "false">
        </div>
        <div class = "tool" id = "circle" title = "Circle">
            <img src="../assets/toolbar/circle.svg" draggable = "false">
        </div>
        <div class = "tool" id = "fill" title = "Fill">
            <img src="../assets/toolbar/bucket.svg" draggable = "false">
        </div>
        <div class = "tool" id = "spray" title = "Spray">
            <img src="../assets/toolbar/spray.svg" draggable = "false">
        </div>
        <div class = "tool" id = "undo" title = "Undo">
            <img src="../assets/toolbar/undo.svg" draggable = "false">
        </div>
    </div>
    <ul id = "figure_ctx_menu">
        <li id = "del_option">Delete</li>
        <li id = "dup_option">Duplicate</li>
    </ul>
    <div id="canvas_container">
        <canvas id = "canvas" width = "800" height = "600"></canvas>
    </div>
    <div id = "event_bar">
        <div id = "event_title">
            <span>Events:</span>
            <button>Clear list</button> 
        </div>
    </div>
    <form name="drawingOptions">
        <p>
            <label for="p-width">Pencil width:</label>
            <input type="range" name="p-width" min="1" max="10" step="1">
        </p>
        <p>
            <label for="p-opacity">Pencil opacity:</label>
            <input type="range" name="p-opacity" min="0" max="1" step="0.1">
        </p>
        <p>
            <label for="f-color">Fill color:</label>
            <input type="color" name="f-color">
        </p>
        <p>
            <label for="s-color">Stroke color:</label>
            <input type="color" name="s-color">
        </p>
        <p>
            <label for="s-color">Canvas color:</label>
            <input type="color" name="c-color">
        </p>
    </form>
     <div id="popup" class="popup">
        <div class="popup_body">
            <div class="popup_content">
               <a href="" class="popup_close">X</a>
               <div class="popup_title">
                   Grant access to user
                   <br>
                   Already granted:
                   {{#each members}}
                        <br>
                        {{this}}
                   {{/each}}
               </div>
               <div class="popup_text">User email:</div>
               <input id="grantor_email" type="text">
               <button id="grant_btn">Grant</button>
            </div>
        </div>
    </div>
    <script>
        let accSettings = document.getElementById('accset_btn')
        accSettings.onclick = () => {
            let popup = document.getElementById('popup')
            popup.style.visibility = 'visible'
            popup.style.opacity = '1'
        }
        let grantBtn = document.getElementById('grant_btn')
        let grantEmail = document.getElementById('grantor_email')
        grantBtn.onclick = () => {
            if(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$/.test(grantEmail.value)) {
                fetch(location.pathname + '?email=' + grantEmail.value)
                popup.style.visibility = 'hidden'
                popup.style.opacity = '0'
            }
            grantEmail.value = ''
        }
        window.onload = () => {
            fetch("{{dPath roomNumber}}")
            .then((res) => res.json())
            .then((env) => {
                fillColor.value = env.fillColor
                strokeColor.value = env.strokeColor
                canvasColor.value = env.canvasColor
                ctx.fillStyle = env.canvasColor
                ctx.fillRect(0, 0, canv.width, canv.height)
                ctx.fillStyle = env.fillColor
                ctx.strokeStyle = env.strokeColor
                drawFigures(env.figures)
                for(let figure of env.figures){
                    if(figure.type == 'pencil'){
                        figure.inOutline = (point) => {
                            let [x0, y0] = point
                            return (x0 <= figure.topPoint[0] + figure.width
                                && x0 >= figure.topPoint[0]
                                && y0 <= figure.topPoint[1] + figure.height
                                && y0 >= figure.topPoint[1]
                            ) 
                        }
                        figure.drawOutline = () => {
                            ctx.strokeRect(figure.topPoint[0], figure.topPoint[1], figure.width, figure.height)
                        }
                        figure.clearOutline = () => {
                            ctx.clearRect(figure.topPoint[0], figure.topPoint[1], figure.width, figure.height)
                            drawFigures(figures)
                        }
                    }
                    figures.push(figure)
                }
            })
        }
        window.onunload = () => {
            let env = {
                fillColor : fillColor.value,
                strokeColor : strokeColor.value,
                canvasColor : canvasColor.value,
                figures
            }
            fetch("{{upPath roomNumber}}",{
                method : "POST",
                headers: {
                    'Content-Type': 'application/json;charset=utf-8'
                },
                body: JSON.stringify(env)
            })
            /*canv.toBlob((blob) => {
                fetch("{{imPath roomNumber}}",{
                    method : "POST",
                    body : blob
                })
            })*/
        }
        window.onbeforeunload = (event) => {
            /*event = event || window.event
            event.returnValue = 'You want to leave ? '*/
            /*let popup = document.getElementById('popup')
            popup.style.visibility = 'visible'
            popup.style.opacity = '1'
            event.preventDefault();
            event.returnValue = '';*/
        }
    </script>
    <script src = "../scripts/clientSocket.js"></script>
    <script src = "../scripts/canvas.js"></script>
    <script src = "https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/js/bootstrap.bundle.min.js" integrity="sha384-p34f1UUtsS3wqzfto5wAAmdvj+osOnFyQFpp4Ua3gs/ZVWx6oOypYoCJhGGScy+8" crossorigin="anonymous"></script>
</body>
</html>